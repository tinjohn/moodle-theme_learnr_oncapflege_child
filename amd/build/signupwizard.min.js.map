{"version":3,"file":"signupwizard.min.js","sources":["../src/signupwizard.js"],"sourcesContent":["import {eventTypes as formEventTypes} from 'core_form/events';\n\nexport const init = (strs) => {\n    /**\n     * Function to add list entries based on event messages\n     * @param {any} message\n     * @returns {any}\n     */\n    function addListEntry(message) {\n        const listItem = document.createElement('li');\n        listItem.textContent = message;\n        listItem.classList.add(\"nodecoration\");\n        errorSummaryUl.appendChild(listItem);\n    }\n    /**\n     * Function to remove all list entries based on event messages\n     * @returns {any}\n     */\n    function removeAllListEntries() {\n        const ul = document.querySelector('#formerrorssummary ul'); // Get a reference to the <ul> element\n        // Remove all <li> elements from the <ul>\n        while (ul.firstChild) {\n            ul.removeChild(ul.firstChild);\n        }\n    }\n\n    /**\n     * Description\n     * @param {any} e\n     * @returns {any}\n     */\n    function fieldValidationFailedListener(e) {\n        const message = e.detail.message;\n        if (message != \"\") {\n            addListEntry(message);\n            const errorSummary = document.querySelector('#formerrorssummary');\n            errorSummary.classList.remove('hidden');\n        }\n    }\n\n    /**\n     * Description\n     * @returns {any}\n     */\n    function refreshWizard() {\n        tabTargets[currentStep].classList.remove('active');\n        currentStep = 0;\n        for(var i=steps[currentStep]+1; i< tabPanels.length; i++) {\n            tabPanels[i].classList.add('hidden');\n        }\n        for(var i=0; i <= steps[currentStep]; i++) {\n            tabPanels[i].classList.remove('hidden');\n        }\n        tabTargets[currentStep].classList.add('active');\n        updateStatusDisplay();\n        refreshErrorsummary();\n    }\n\n    /**\n     * Description\n     * @returns {any}\n     */\n    function refreshErrorsummary () {\n        const errorSummary = document.querySelector('#formerrorssummary');\n        errorSummary.classList.add('hidden');\n        removeAllListEntries();\n    }\n\n    // profile_field_Muttersprache\n    const pfmspr = document.querySelector('#id_profile_field_Muttersprache');\n    if(pfmspr) {\n        pfmspr.placeholder = 'z. Bsp. Deutsch';\n    }\n\n    // Create the pagination div and its contents\n    const paginationHTML = `\n    <div class=\"pagination\">\n    <a class=\"btn hidden\" id=\"prev\" title=\"`+ strs[0] +`\"><i class=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i></a>\n    <a class=\"btn\" id=\"next\" title=\"`+ strs[1] +`\"><i class=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i>    </a>\n    <a class=\"btn hidden\" id=\"refresh\" title=\"`+ strs[2] +`\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></a>\n    </div>\n    `;\n\n    // Get a reference to the first form element in the document\n    const form = document.querySelector('form');\n    const signup = document.querySelector('div.signupform');\n    // Append the pagination HTML to the form\n    signup.insertAdjacentHTML('beforeend', paginationHTML);\n    const errorSummaryUl = document.querySelector('#formerrorssummary ul');\n\n    const submitButton = document.querySelector('input[type=\"submit\"]');\n    submitButton.addEventListener('click', () => {\n         // Remove the event listener\n        form.removeEventListener(formEventTypes.formFieldValidationFailed, fieldValidationFailedListener);\n        refreshErrorsummary();\n        form.addEventListener(formEventTypes.formFieldValidationFailed, fieldValidationFailedListener);\n    });\n\n\n    // Add the event listener\n//    form.addEventListener(formEventTypes.formFieldValidationFailed, fieldValidationFailedListener);\n\n    // form.addEventListener(formEventTypes.formFieldValidationFailed, e => {\n    //     const message = e.detail.message;\n    //     if(message != \"\") {\n    //         addListEntry(message);\n    //     }\n    //     const errorSummary = document.querySelector('#formerrorssummary');\n    //     errorSummary.classList.remove('hidden');\n    // });\n\n    const refreshButton = document.querySelector('#refresh');\n    const previousButton = document.querySelector('#prev');\n    const nextButton = document.querySelector('#next');\n    //const submitButton = document.querySelector('#submit');\n    const tabPanels = form.querySelectorAll('form > *');\n    const fieldsets = form.querySelectorAll('form > fieldset');\n\n    //const tabPanels = Array.from(tabPanels1).concat(Array.from(tabPanels2));\n    //const isEmpty = (str) => !str.trim().length;\n    let currentStep = 0;\n    for(var x=1; x<tabPanels.length; x++) {\n        window.console.log(tabPanels[x]);\n    }\n    var steps = [];\n    if(fieldsets.length > 1) {\n        steps = [6, 10]; // Initialize the array with 6 and 10\n    } else {\n        steps = [5, 9]; // Initialize the array with 6 and 10\n    }\n\n    for (let x = 1; x < fieldsets.length; x++) {\n        steps.push(10 + x); // Add 10 + x to the array for each x from 1 to the length of fieldsets\n    }\n    steps.push(tabPanels.length - 1); // Add tabPanels.length - 1 as the last index in the array\n\n    //const steps = [6, 10, 11, tabPanels.length-1];\n    // Create the tab status HTML\n    var tabStatusHTML = `\n    <div class=\"tab-status\">\n        <span class=\"tab active\">1</span>\n    `;\n    for(var sc = 2; sc <= steps.length; sc++) {\n    tabStatusHTML += `\n        <span class=\"tab\">` + sc + `</span>\n    `;\n    }\n    // Create the tab status HTML\n    tabStatusHTML += `\n    <span class=\"helppix\"></span>\n    </div>\n    `;\n    // Append the pagination HTML to the form\n    signup.insertAdjacentHTML('beforebegin', tabStatusHTML);\n\n    const tabTargets = document.querySelectorAll('.tab');\n\n    // currentStep is 0\n    for(var i=steps[currentStep]+1; i< tabPanels.length; i++) {\n        tabPanels[i].classList.add('hidden');\n    }\n\n    // Next: Change UI relative to the current step and account for button permissions\n    nextButton.addEventListener('click', (event) => {\n        // Prevent default on links\n        event.preventDefault();\n        // Hide current tab\n        for(var i = 0 ; i <= steps[currentStep]; i++) {\n            tabPanels[i].classList.add('hidden');\n        }\n        tabTargets[currentStep].classList.remove('active');\n        // Show next tab\n        for(i=steps[currentStep]+1; i <= steps[currentStep + 1]; i++) {\n            tabPanels[i].classList.remove('hidden');\n        }\n        currentStep += 1;\n        tabTargets[currentStep].classList.add('active');\n        //validateEntry();\n        updateStatusDisplay();\n    });\n\n    // Previous: Change UI relative to current step and account for button permissions\n    previousButton.addEventListener('click', (event) => {\n        event.preventDefault();\n        // Hide current tab\n        for(var i = 0; i < tabPanels.length; i++) {\n            tabPanels[i].classList.add('hidden');\n        }\n        tabTargets[currentStep].classList.remove('active');\n        // Show previous tab\n        if (currentStep < 2) {\n            var start = -1;\n        }  else {\n            var start = steps[currentStep - 2];\n        }\n        for(i = start + 1; i <= steps[currentStep -1]; i++) {\n            tabPanels[i].classList.remove('hidden');\n        }\n        tabTargets[currentStep - 1].classList.add('active');\n        currentStep -= 1;\n        nextButton.removeAttribute('disabled');\n        updateStatusDisplay();\n    });\n\n    // Refresh: Change UI relative to current step and account for button permissions\n    refreshButton.addEventListener('click', () => {\n        refreshWizard();\n    });\n\n\n\n    /**\n     * updateStatusDisplay\n     * @returns {any}\n     */\n    function updateStatusDisplay() {\n        // If on the last step, hide the next button and show submit\n        if (currentStep === tabTargets.length - 1) {\n            nextButton.classList.add('hidden');\n            previousButton.classList.remove('hidden');\n            refreshButton.classList.remove('hidden');\n            //submitButton.classList.remove('hidden');\n            //validateEntry();\n            // If it's the first step hide the previous button\n        } else if (currentStep == 0) {\n            nextButton.classList.remove('hidden');\n            previousButton.classList.add('hidden');\n            refreshButton.classList.add('hidden');\n            //submitButton.classList.add('hidden');\n            // In all other instances display both buttons\n        } else {\n            nextButton.classList.remove('hidden');\n            previousButton.classList.remove('hidden');\n            refreshButton.classList.add('hidden');\n            //submitButton.classList.add('hidden');\n        }\n    }\n\n\n    // /**\n    //  * Description\n    //  * @returns {any}\n    //  */\n    // function validateEntry() {\n    //     let input = tabPanels[currentStep].querySelector('input');\n    //     // Start but disabling continue button\n    //     nextButton.setAttribute('disabled', true);\n    //     //submitButton.setAttribute('disabled', true);\n    //     // Validate on initial function fire\n    //     setButtonPermissions(input);\n    //     // Validate on input\n    //     input.addEventListener('input', () => setButtonPermissions(input));\n    //     // Validate if bluring from input\n    //     input.addEventListener('blur', () => setButtonPermissions(input));\n    // }\n\n    // /**\n    //  * Description\n    //  * @param {any} input\n    //  * @returns {any}\n    //  */\n    // function setButtonPermissions(input) {\n    //     if (isEmpty(input.value)) {\n    //         nextButton.setAttribute('disabled', true);\n    //         //submitButton.setAttribute('disabled', true);\n    //     } else {\n    //         nextButton.removeAttribute('disabled');\n    //         //submitButton.removeAttribute('disabled');\n    //     }\n    // }\n};"],"names":["strs","fieldValidationFailedListener","e","message","detail","listItem","document","createElement","textContent","classList","add","errorSummaryUl","appendChild","addListEntry","querySelector","remove","refreshErrorsummary","ul","firstChild","removeChild","removeAllListEntries","pfmspr","placeholder","paginationHTML","form","signup","insertAdjacentHTML","addEventListener","removeEventListener","formEventTypes","formFieldValidationFailed","refreshButton","previousButton","nextButton","tabPanels","querySelectorAll","fieldsets","currentStep","x","length","window","console","log","steps","push","tabStatusHTML","sc","tabTargets","i","updateStatusDisplay","event","preventDefault","start","removeAttribute","refreshWizard"],"mappings":"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"}